version: '3.5'

services:
  docker-dev-env-for-symfony-web:
    container_name: docker-dev-env-for-symfony-web
    build:
      context: ./docker/nginx
      args:
        UID: $U_ID
    ports:
      - 1000:80
    volumes:
      - ./public:/appdata/www/public
    depends_on:
      - docker-dev-env-for-symfony-be
    networks:
      - docker-dev-env-for-symfony-network

  docker-dev-env-for-symfony-be:
    container_name: docker-dev-env-for-symfony-be
    build:
      context: docker/php
      args:
        UID: $U_ID
    volumes:
      - ./:/appdata/www
    ###> XDEBUG 3 ###
    # Use your client IP here
    # Linux: run "ip a | grep docker0"
    # Windows (with WSL2) and Mac: host.docker.internal
    environment:
      XDEBUG_CLIENT_HOST: host.docker.internal
      XDEBUG_CLIENT_PORT: 9003
      PHP_IDE_CONFIG: serverName=docker-dev-env-for-symfony
    networks:
      - docker-dev-env-for-symfony-network

  docker-dev-env-for-symfony-db:
    container_name: docker-dev-env-for-symfony-db
    build:
      context: ./docker/database
    ports:
      - 10000:3306
    environment:
      MYSQL_DATABASE: database
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - docker-dev-env-for-symfony-db-data:/var/lib/mysql
    networks:
      - docker-dev-env-for-symfony-network
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready -U ${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  docker-dev-env-for-symfony-db-data:

networks:
  docker-dev-env-for-symfony-network:
    external: true
